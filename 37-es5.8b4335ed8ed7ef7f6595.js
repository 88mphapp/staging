(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{DcMt:function(t,e,n){"use strict";n.r(e),n("ls82");var r=n("hWsi");function o(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(s){return void n(s)}c.done?e(u):Promise.resolve(u).then(r,o)}function i(t){return function(){var e=this,n=arguments;return new Promise(function(r,i){var a=t.apply(e,n);function c(t){o(a,r,i,c,u,"next",t)}function u(t){o(a,r,i,c,u,"throw",t)}c(void 0)})}}n("kB5k"),n("/TMw"),n("M39V"),e.default=function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.heading,o=e.description,a=e.icon,c=e.html,u=e.button;return t=i(regeneratorRuntime.mark(function t(e){var i,s,w,l,f,h;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(s=e.appNetworkId,w=e.walletSelect,l=e.exit,f=e.stateSyncStatus,h=e.stateStore,null!==(i=e.network)){t.next=5;break}if(!f.network){t.next=5;break}return t.next=5,new Promise(function(t){f.network&&f.network.then(t),setTimeout(function(){null===i&&t()},500)});case 5:if(h.network.get()==s){t.next=7;break}return t.abrupt("return",{heading:n||"You Must Change Networks",description:o||"We've detected that you need to switch your wallet's network from <b>".concat(Object(r.g)(i),"</b> to <b>").concat(Object(r.g)(s),' network</b> for this Dapp. <br><br> <i style="font-size: inherit; font-family: inherit;">*Some wallets may not support changing networks. If you can not change networks in your wallet you may consider switching to a different wallet.</i>'),eventCode:"networkFail",button:u||{onclick:function(){l(),w()},text:"Switch Wallet"},html:c,icon:a||r.b});case 7:case"end":return t.stop()}},t)})),function(e){return t.apply(this,arguments)}}}}]);